[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data 1",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.522632",
  "module": "Migoo CRM",
  "name": "Raw Data-Full Name",
  "script": "frappe.ui.form.on('Raw Data',  \"first_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})\nfrappe.ui.form.on('Raw Data', \"middle_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})\nfrappe.ui.form.on('Raw Data', \"last_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-01-12 17:10:42.935087",
  "module": "Migoo CRM",
  "name": "Supplier Form Setting",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm)\n\t{\n\t    \n\t    if(frappe.user.has_role(\"Migoo Approver\") === true)\n\t    {\n\t        console.log(\"Migoo Approver\");\n\t\t    frm.add_custom_button(__('Create_User'),\n\t\t    function()\n\t\t    {\n\t\t        frappe.new_doc(\"User\", \n\t\t        {\n    \t\t        \"username\":frm.doc.email,\n    \t\t        \"first_name\":frm.doc.supplier_name,\n    \t\t        \"role_profile_name\":\"Vendor\",\n    \t\t        \"module_profile\":\"Migoo\",\n    \t            \"middle_name\":frm.doc.name,\n    \t            \"mobile_no\":frm.doc.mobile_number,\n    \t            \"phone\":frm.doc.phone_no,\n\t\t        });\n\t        });\n\t    }\n\t    \n        if(frappe.user.has_role(\"Vendor\") === true)\n        {\n\t         cur_frm.set_df_property(\"verify\", \"hidden\",1);\n\t    }\n\t   else\n\t   // if(frappe.user.has_role(\"Administrator\") === true)\n        {\n\t        cur_frm.set_df_property(\"verify\", \"hidden\",0);\n\t    }\n\t    $(\".form-assignments\").hide();\n\t\t$(\".form-attachments\").hide();\n\t\t$(\".form-shared\").hide();\n\t\t$(\".form-tags\").hide();\n\t\t$(\".form-sidebar-stats\").hide();\n\t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n\t   \n\t},\n\t\n\tonload:function(frm){\n\t    var nm=frm.doc.name_of_suppier\n\t    cur_frm.set_value(\"supplier_name\",nm)\n\t},\n\t\n\tbefore_save:function(frm)\n\t{\n\t    if (cur_frm.doc.verify == \"Not Verify\")\n        {\n            cur_frm.set_value(\"disabled\", 1);\n            cur_frm.set_df_property(\"disabled\", \"read_only\",1);\n        }\n    \n   \t    if (cur_frm.doc.verify == \"Verify\")\n        {\n            // cur_frm.set_value(\"disabled\",\"\");\n            cur_frm.set_df_property(\"disabled\", \"read_only\", 0);\n        }\n\t}\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.463409",
  "module": "Migoo CRM",
  "name": "Supplier Button Hide",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh:function(frm) {\n\n\t  \n\t    if(frappe.user.has_role(\"Administrator\") === true){\n\t        frm.add_custom_button(__('Accounting Ledger'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'General Ledger',\n\t\t\t\t\t{ party_type: 'Supplier', party: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Accounts Payable'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'Accounts Payable', { supplier: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Bank Account'), function () {\n\t\t\t\terpnext.utils.make_bank_account(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Pricing Rule'), function () {\n\t\t\t\terpnext.utils.make_pricing_rule(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Get Supplier Group Details'), function () {\n\t\t\t\tfrm.trigger(\"get_supplier_group_details\");\n\t\t\t}, __('Actions'));\n\t    }\n\t    else  if(frappe.user.has_role(\"Vendor\") === true)\n\t     {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Accounting Ledger',\"View\"); \n\t        frm.remove_custom_button('Accounts Payable',\"View\"); \n\t        frm.remove_custom_button('Bank Account',\"Create\"); \n\t        frm.remove_custom_button('Pricing Rule',\"Create\"); \n\t        frm.remove_custom_button('enable_common_party_accounting',\"Actions\"); \n\t        frm.remove_custom_button('Get Supplier Group Details',\"Actions\"); \n\t         },0);  \n\t    }\n\t    else  if(frappe.user.has_role(\"Migoo Approver\") === true)\n\t     {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Accounting Ledger',\"View\"); \n\t        frm.remove_custom_button('Accounts Payable',\"View\"); \n\t        frm.remove_custom_button('Bank Account',\"Create\"); \n\t        frm.remove_custom_button('Pricing Rule',\"Create\"); \n\t        frm.remove_custom_button('enable_common_party_accounting',\"Actions\"); \n\t       // frm.remove_custom_button('Get Supplier Group Details',\"Actions\"); \n\t         },0);  \n\t    }\n\t    else{\n\t        frm.add_custom_button(__('Accounting Ledger'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'General Ledger',\n\t\t\t\t\t{ party_type: 'Supplier', party: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Accounts Payable'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'Accounts Payable', { supplier: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Bank Account'), function () {\n\t\t\t\terpnext.utils.make_bank_account(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Pricing Rule'), function () {\n\t\t\t\terpnext.utils.make_pricing_rule(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Get Supplier Group Details'), function () {\n\t\t\t\tfrm.trigger(\"get_supplier_group_details\");\n\t\t\t}, __('Actions'));\n\t    }\n\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.503434",
  "module": "Migoo CRM",
  "name": "Supplier List View",
  "script": "frappe.listview_settings['Supplier'] = {\n// \tadd_fields: [\"verify\"],\n\tget_indicator: function(doc) {\n\t\tvar indicator = [(doc.verify), frappe.utils.guess_colour(doc.verify), \"verify,=,\" + doc.verify];\n\t\tif(doc.verify==\"Verify\") \n\t\t{\n\t\t\tindicator[1] = \"green\";\n\t\t}\n\t\tif(doc.verify==\"Not Verify\") \n\t\t{\n\t\t\tindicator[1] = \"red\";\n\t\t}\n\t\treturn indicator;\n\t},\n\tonload:function(doc) \n\t{\n\t    if(frappe.user.has_role(\"Vendor\") === true){\n\t        \n\t        $('.btn-primary').hide();\n\t    }    \n\t}\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "User",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.351480",
  "module": "Migoo CRM",
  "name": "User Email Set",
  "script": "frappe.ui.form.on('User', {\n    \tonload:function(frm) \n\t\t{\n    \t    var a = frm.doc.username;\n    \t    frm.set_value(\"email\",a);\n    \t    cur_frm.set_df_property(\"middle_name\", \"hidden\",1);\n    \t},\n    \trefresh:function(frm){\n    \t    cur_frm.set_df_property(\"middle_name\", \"hidden\",1);\n    \t},\n    \temail:function(frm) \n    \t{\n\t    frm.set_value(\"username\", frm.doc.email);\n    \t    \n    \t},\n    \tafter_save:function(frm)\n    \t{\n    \t    console.log(\"aa\");\n    \t    if(frm.doc.middle_name != null)\n    \t\t{\n    \t\t  \n    \t\t  var user= cur_frm.doc.email;\n    \t\t  var supplier= cur_frm.doc.middle_name;  \n    \t\t  frappe.call({\n        \t  method:\"supplier\", \n        \t\t  args:{'user':user,\"supplier\":supplier},\n        \t\t  });\n    \t\t}\n    \t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.060613",
  "module": "Migoo CRM",
  "name": "Item Form Setting",
  "script": "frappe.ui.form.on('Item', {\n\tvalidate:function(frm) \n\t{\n\t   //if (cur_frm.doc.equipment_verify == \"Not Verify\")\n    //     {\n    //          cur_frm.set_value(\"disabled\",1);\n    //           cur_frm.set_df_property(\"disabled\", \"read_only\",1);\n    //     }\n    //     else{\n    //         //  cur_frm.set_value(\"disabled\",0);\n    //          cur_frm.set_df_property(\"disabled\", \"read_only\",0);\n    //     }\n\t},\n\trefresh(frm) \n\t{\n\t    frm.remove_custom_button('Add / Edit Prices', \"Actions\"); \n\t    frm.remove_custom_button('Publish in Website',\"Actions\");\n// \t\tcur_frm.set_df_property(\"item_group\", \"hidden\",1);\n\t   // cur_frm.set_df_property(\"item_group\", \"read_only\",1);// your code here\n\t\tif (frappe.user_roles.indexOf(\"Vendor\") == '0')\n\t\t{\n\t       //frm.page.menu.find('[data-label=\"Email\"],[data-label=\"Links\"],[data-label=\"Rename\"],[data-label=\"Delete\"]').parent().remove();\n\t       \n    \t   \t$(\".form-assignments\").hide();\n    \t   //\t$(\".form-attachments\").hide();\n    \t   \t$(\".form-shared\").hide();\n    \t\t$(\".form-tags\").hide();\n    \t\t$(\".form-sidebar-stats\").hide();\n    \t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n    \t\t$('.icon-btn').hide();\n\n\t    }\n\t    \n\t   if (cur_frm.doc.equipment_verify == \"Not Verify\")\n        {\n            //  cur_frm.set_value(\"disabled\",1);\n            //   cur_frm.set_df_property(\"disabled\", \"read_only\",1);\n        }\n        else{\n            //  cur_frm.set_value(\"disabled\",\"\");\n             cur_frm.set_df_property(\"disabled\", \"read_only\",0);\n        }\n\t    if(frappe.user.has_role(\"Vendor\") === true)\n\t     {\n\t        \n\t         cur_frm.set_df_property(\"equipment_verify\", \"read_only\",1);\n\t          setTimeout(() => {\n    \t        console.log(\"View Hide\");\n    \t        frm.remove_custom_button('Duplicate');\n    \t         \n    \t        \n    \t        frm.remove_custom_button('...');\n    \t        frm.remove_custom_button('Create Website Item')\n\t        \n\t         },0);  \n\t    }\n\t   // frm.set_query('brand122', function(doc, cdt, cdn) {\n    //                 let d = locals[cdt][cdn];\n    //                 return{\n    //                     filters: {\n    //                         'equipment_sub_category': d.item_group,\n                            \n    //                     }\n    //                 };\n    //             });\n\t   //  frm.set_query('model_no', function(doc, cdt, cdn) {\n    //                 let d = locals[cdt][cdn];\n    //                 return{\n    //                     filters: {\n    //                         'brand': d.brand122,\n                            \n    //                     }\n    //                 };\n    //             });\n\t    \n\t},\n\tonload:function(frm) \n\t{\n\t    if(frappe.user.has_role(\"Vendor\") === true)\n\t     {\n\t         console.log(\"Vendor\");\n\t         cur_frm.set_df_property(\"equipment_verify\", \"read_only\",1);\n\t     }\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:42.984915",
  "module": "Migoo CRM",
  "name": "Equipment List Setting",
  "script": "frappe.listview_settings['Item'] = {\n\tonload:function(frm) {\n\t    $('#help-links').hide();\n\t},\n// \tget_indicator: function(doc) {\n// \t\tvar indicator = [(doc.equipment_status), frappe.utils.guess_colour(doc.equipment_status), \"equipment_status,=,\" + doc.equipment_status];\n// \t\tif(doc.equipment_status==\"Working\") \n// \t\t{\n// \t\t\tindicator[1] = \"green\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Breakdown\") \n// \t\t{\n// \t\t\tindicator[1] = \"red\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Ideal\") \n// \t\t{\n// \t\t\tindicator[1] = \"blue\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Occupied With Migoo\") \n// \t\t{\n// \t\t\tindicator[1] = \"cyan\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Occupied with Others\") \n// \t\t{\n// \t\t\tindicator[1] = \"orange\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Free\") \n// \t\t{\n// \t\t\tindicator[1] = \"yellow\";\n// \t\t}\n\n// \t\treturn indicator;\n// \t}\n    get_indicator: function(doc) {\n    \t\tvar indicator = [(doc.equipment_verify), frappe.utils.guess_colour(doc.equipment_verify), \"equipment_verify,=,\" + doc.equipment_verify];\n    \t\tif(doc.equipment_verify==\"Verify\") \n    \t\t{\n    \t\t\tindicator[1] = \"green\";\n    \t\t}\n    \t\tif(doc.equipment_verify==\"Not Verify\") \n    \t\t{\n    \t\t\tindicator[1] = \"red\";\n    \t\t}\n    \t\treturn indicator;\n    \t},\n\t     \n\trefresh:function(doc)\n\t{    $(\".sidebar-toggle-placeholder\").hide(\"sidebar-toggle-btn\")\n        $(\".layout-side-section\").hide();\n    \t$(\".layout-main-section-wrapper\").addClass(\"col-12\"); // this removes class \"col-md-10\" from content block, which sets width to 83%\n    \t \n\t}\n\n\t\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data 1",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.482429",
  "module": "Migoo CRM",
  "name": "Raw Data 1 to Lead",
  "script": "frappe.ui.form.on('Raw Data 1', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__('Create Lead'),\n\t\t    function()\n\t\t    {\n\t\t        frappe.new_doc(\"Lead\", \n\t\t        {\n    \t\t        \n    \t\t        \"first_name\":frm.doc.full_name,\n    \t\t        \"lead_owner\":frm.doc.data_owner,\n    \t\t        \"company_name\":frm.doc.organization_name,\n    \t\t        \"job_title\":frm.doc.job_title,\n    \t\t        \"email_id\":frm.doc.email,\n    \t\t        \"email_2\":frm.doc.email_2,\n    \t\t        \"website\":frm.doc.website,\n    \t\t        \"phone\":frm.doc.phone,\n    \t\t        \"mobile_no\":frm.doc.mobile_no,\n    \t\t        \"whatsapp_no\":frm.doc.whatsapp_no,\n    \t\t        \"phone_ext\":frm.doc.phone_2,\n    \t\t        \"area\":frm.doc.area,\n    \t\t        \"request_type\":frm.doc.request_type,\n    \t\t        \"territory\":frm.doc.location,\n    \t\t        \"address_title\":frm.doc.address_title,\n    \t\t        \"address_line_1\":frm.doc.address_line_1,\n    \t\t        \"address_line_2\":frm.doc.address_line_2,\n    \t\t        \"city\":frm.doc.city,\n    \t\t        \"state\":frm.doc.state,\n    \t\t        \n\t\t        });\n\t        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.403666",
  "module": "Migoo CRM",
  "name": "Lead Address",
  "script": "frappe.ui.form.on('Lead', {\n\tafter_save:function(frm) {\n\t    \n\t\t  \n\t\t    var name=cur_frm.doc.name;\n\t\t    var address_title= cur_frm.doc.address_title;\n\t        var address_line1= cur_frm.doc.address_line_1;\n\t        var address_line2= cur_frm.doc.address_line_2;\n\t        var area= cur_frm.doc.area;\n\t        var city= cur_frm.doc.city;\n\t        var state= cur_frm.doc.state;\n\t        var postal_code= cur_frm.doc.postal_code;\n\t        if(address_title!=null){\n\t        \n    \t        frappe.call({\n    \t\t        method:\"address\", \n    \t\t        args: {'address_title':address_title,\"address_line1\":address_line1,\"city\":city,\"state\":state,\"territory\":postal_code, \"area\":area, \"name\":name,\"address_line2\":address_line2},\n    \t\t    });\n    \t\t    frm.refresh();\n\t        }\n\t\t  //  console.log(address_title);\n\t\t  //  frappe.call({\n\t\t  //      method:\"addresslink\", \n\t\t  //      args: {\"name\":name,\"title\":address_title},\n\t\t  //  });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.102694",
  "module": "Migoo CRM",
  "name": "Category Setting Item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh:function(frm) {\n\t    cur_frm.set_query(\"item_group\", function() {\n    return {\n            \"filters\": {\n                \"parent_item_group\": \"All Equipment Groups\",\n            }\n        };\n    });\n\t    frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.item_group,\n\t\t\t\t    // \"is_group\": \"1\",\n\t\t\t\t    \n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n   \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Brand",
  "enabled": 0,
  "modified": "2023-01-12 17:10:43.443177",
  "module": "Migoo CRM",
  "name": "Brand Filter",
  "script": "frappe.ui.form.on('Brand', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t     \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Model No",
  "enabled": 0,
  "modified": "2023-01-12 17:10:43.423302",
  "module": "Migoo CRM",
  "name": "Model No Filter",
  "script": "frappe.ui.form.on('Model No', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_main_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_sub_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t   \n    },\n    equipment_sub_category:function(frm){\n\t    var category=cur_frm.doc.equipment_sub_category;\n\t     frappe.call({\n        \t  method:\"model_no\", \n        \t\t  args:{'category':category},\n        \t\t  }).then(records => {\n                // alert(records[\"message\"]);\n                var category1 = records[\"message\"];\n               \n                if(category1 > 0){\n                    \n                     cur_frm.set_df_property(\"equipment_category\", \"hidden\",0);\n                    \n                }\n    \t\t })\n\t\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.147640",
  "module": "Migoo CRM",
  "name": "Caputal Register no",
  "script": "frappe.ui.form.on('Item', {\n\tregister_no:function(frm) {\n\t    if (cur_frm.doc.register_no !=\"\"){\n\t        name=cur_frm.doc.register_no\n\t        frappe.call({\n\t\t        method:\"name\", \n\t\t        args: {'name1':name},\n\t\t    }).then(records => {\n\t\t      //  cur_frm.set_value(\"register_no\",\"\")\n                var name1 = records[\"message\"]\n                cur_frm.set_value(\"register_no\",name1)\n\t\t    });\n\t    }\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.129439",
  "module": "Migoo CRM",
  "name": "Naming seies of equipment",
  "script": "frappe.ui.form.on('Item', {\n\t\tbefore_save:function(frm) {\n\t    \n\t\tif(cur_frm.doc.item_group==\"Aerial Work Platform\") {\n          \n            var a=\"AERI-.####\";\n           cur_frm.set_value(\"naming_series\", a);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Concrete Machinery\") {\n          \n            var b=\"CONC-.####\";\n           cur_frm.set_value(\"naming_series\", b);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Cranes\") {\n          \n            var c=\"CRAN-.####\";\n           cur_frm.set_value(\"naming_series\", c);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Earth Moving Machinery\") {\n          \n            var d=\"EART-.####\";\n           cur_frm.set_value(\"naming_series\", d);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Lifting and Handling Machinery\") {\n          \n            var f=\"LIFT-.####\";\n           cur_frm.set_value(\"naming_series\", f);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Miscellaneous\") {\n          \n            var g=\"MISC-.####\";\n           cur_frm.set_value(\"naming_series\", g);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Plant Crushing and Screening\") {\n          \n            var h=\"PLAN-.####\";\n           cur_frm.set_value(\"naming_series\", h);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Road Machinery\") {\n          \n            var i=\"ROAD-.####\";\n           cur_frm.set_value(\"naming_series\", i);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Truck / Tanker / Trailor\") {\n          \n            var j=\"TRUC-.####\";\n           cur_frm.set_value(\"naming_series\", j);\n\t\t}\n      \t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.282111",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Lead",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Lead', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Lead'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.328072",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message for Supplier",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Supplier', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Supplier'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n           console.log(\"template\", template)\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('message sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    console.log(\"template1\", template)\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Inquiry Form",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.238278",
  "module": "Migoo CRM",
  "name": "Inquiry Form for CRM",
  "script": "frappe.ui.form.on('Inquiry Form', {\n\trefresh(frm) {\n\t\t// your code here\n  frm.add_custom_button(__('Lead'), function(){\n       \n        var request=frm.doc.request;\n        var fname = frm.doc.first_name;\n        var lname = frm.doc.last_name;\n        var company = frm.doc.company_name;\n        var email=frm.doc.email_address;\n        var mobile = frm.doc.mobile_no;\n        var notes = frm.doc.supplier_notes;\n        var items = frm.doc.item_details;\n        var date = frm.doc.curdate\n        var wp = frm.doc.wpnumber\n        var inquiry_source = frm.doc.inquiry_source\n        var a=wp\n        var aa=items\n  \n        if(a==null){\n            // alert(\"null\")\n            var d=\"\";\n        }\n        else{\n            // alert(\" Not null\")\n            var d=a;\n        }\n        if(aa==null){\n            \n            var dd=\"\";\n        }\n        else{\n            \n            var dd=aa;\n        }\n        if(company == null){\n            var c = \"\";\n        }\n        else{\n            var c = company\n        }\n        if(notes == null){\n            var n = \"\";\n        }\n        else{\n            var n =notes;\n        }\n       if(dd != \"\")\n       {\n        //   alert(\"Inquiry\")\n        frappe.call({\n            method:\"inquiry\",\n            args:{\n                \"request\":request,\n                \"fname\":fname,\n                \"lname\":lname,\n                \"company\":c,\n                \"email\":email,\n                \"mobile\":mobile,\n                \"notes\":n,\n                \"equipment\":dd,\n                \"date\":date,\n                \"watsappno\":d,\n                \"inquiry_source\":inquiry_source,\n            }\n            });\n            \n       }\n       else{\n           frappe.call({\n            method:\"contact_inquiry\",\n            args:{\n                \"request\":request,\n                \"fname\":fname,\n                \"lname\":lname,\n                \"company\":c,\n                \"email\":email,\n                \"mobile\":mobile,\n                \"notes\":n,\n                'watsappno':d,\n                \"equipment\":dd,\n                 \"date\":date,\n                 \"inquiry_source\":inquiry_source,\n            }\n            });\n       }\n    });\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.078798",
  "module": "Migoo CRM",
  "name": "Google Location",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t   // / var section = document.getElementsByClassName('form-section')[1].id = \"locationsection\";\n// \t\tdocument.getElementsByTagName('input')[2].id = \"autocomplete\";\n    //   document.querySelectorAll(\"[data-fieldname='location']\").id = \"autocomplete\";\n            document.querySelectorAll(\"[data-fieldname='equipment_location']\")[1].id = \"autocomplete\";\n// \t\tdocument.getElementsByTagName(\"select\").contentEditable;\n\n\t\t\n\n\t\tvar script = document.createElement('script');\n\t\t\tscript.type = 'text/javascript';\n\t\t\tscript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyC_iBGslaXogM6MssBSkRrGKDRQ2YcPD_Q&libraries=places';    \n\n\t\t\tdocument.head.appendChild(script);\n\t},\n\tequipment_location: function (frm) {\n\n\t\t\n\t\tvar autocomplete = new google.maps.places.Autocomplete((document.getElementById('autocomplete')), {\n\t\t types: ['geocode'],\n\t\t \n\t\t});\n\t\t \n\t\tgoogle.maps.event.addListener(autocomplete, 'load', function () {\n\t\t var near_place = autocomplete.getPlace();\n\t\t});\n\t},\n\t\n\tbefore_save:function(frm){\n\t     var places = document.getElementById('autocomplete').value\n\t     frm.set_value(\"equipment_location\",places)\n\t     \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.309887",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Supplier List",
  "script": "frappe.listview_settings['Supplier'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Supplier'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Supplier',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.258815",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Lead List",
  "script": "frappe.listview_settings['Lead'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Lead'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Lead',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.192434",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Opportunity",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Opportunity', {\n    refresh(frm) {\n        if(frm.doc.whatsapp){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Opportunity'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n           console.log(\"template\", template)\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    console.log(\"template1\", template)\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.219546",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Opportunity List",
  "script": "frappe.listview_settings['Opportunity'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Opportunity'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                    template.append[\"new add\"]\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Opportunity',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.167370",
  "module": "Migoo CRM",
  "name": "Opportunity save",
  "script": "frappe.ui.form.on('Opportunity', {\n\tonload(frm) {\n\t\tif (!frm.is_new()) {\n\t\t  //  alert(\"Save\")\n        //  frm.add_custom_button('Click me', () => console.log('Clicked custom button'))\n        cur.frm.save()\n}\n\n\t}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Website Item",
  "enabled": 0,
  "modified": "2023-01-12 17:10:43.032013",
  "module": "Migoo CRM",
  "name": "Supplier details fetch",
  "script": "frappe.ui.form.on('Website Item', {\n\tonload:function(frm) {\n\t    var item =cur_frm.doc.item_code;\n\t    alert(item)\n\t    frappe.call({\n\t        method:\"suppler_mo_no\",\n\t        args:{\"item\":item},\n\t    }).then(records => {\n\t\t      //  cur_frm.set_value(\"register_no\",\"\")\n                var name1 = records[\"message\"]\n                var no = records[\"msg\"]\n                cur_frm.set_value(\"supplier_name\",name1)\n                cur_frm.set_value(\"supplier_number\",no)\n\t\t    });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:43.005222",
  "module": "Migoo CRM",
  "name": "Create website item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh:function(frm) {\n\t   // alert(\"Hello\")\n\t    var a= frm.doc.equipment_for_sell;\n        var b= frm.doc.equipment_verify;\n        // alert(a);\n        // alert(b);\n        //    // && c==0\n        \n        if(a==1 && b==\"Verify\"){\n            \n           \n\t            frm.add_custom_button(__(\"Create Website Item\"),\n\t    \t    function() {\n\t    \t         var c=frm.doc.maker_model;\n                    var m =frm.doc.fitness_dt  \n            \t    \t        if(c==null){\n                        // alert(\"null\")\n                                    var d=\"g \";\n                                }\n                                else{\n                        // alert(\" Not null\")\n                                    var d=c;\n                                }\n                                if(m==null){\n                        // alert(\"null\")\n                                     var n=\"m \";\n                                }\n                                else{\n                        // alert(\" Not null\")\n                                    var n=m;\n                                }\n                                \n    \t\t      //  alert(\"jo\");\n    \t\t        var name=cur_frm.doc.name;\n    \t\t      \n    \t\t        var item_group= cur_frm.doc.item_group;\n    \t\t         \n    \t\t        var sub= cur_frm.doc.equipment_main_category;\n    \t\t        var price = cur_frm.doc.standard_rate;\n    \t\t        \n    \t            var maker_model = maker_model;\n    \t           //  alert(d)\n    \t            var vehicle_class= cur_frm.doc.vehicle_class;\n    \t            var owner_count = cur_frm.doc.owner_count;\n    \t            var insurance_date = cur_frm.doc.insurance_date;\n    \t           \n    \t            var fitness_dt = fitness_dt;\n    \t           // alert(fitness_dt)\n    \t            var manufacturing_date = cur_frm.doc.manufacturing_date;\n    \t            var registration_date = cur_frm.doc.registration_date;\n    \t            var model = cur_frm.doc.model;\n    \t            \n    \t            var equipment_condition = cur_frm.doc.equipment_condition;\n    \t            var equipment_current_reading = cur_frm.doc.equipment_current_reading;\n    \t            var short_description=cur_frm.doc.short_description;\n    \t            var description=cur_frm.doc.description;\n    \t            \n    \t            var location= cur_frm.doc.equipment_location;\n    \t            var img1 = frm.doc.right_picture;\n    \t            var img2 = frm.doc.front_picture;\n    \t            var img3 = frm.doc.left_picture;\n    \t           if(vehicle_class== null){\n    \t               var vehicle_class1 = '';\n    \t           }\n    \t           else{\n    \t               vehicle_class1 = vehicle_class\n    \t           }\n    \t           if(maker_model==null)\n    \t           {\n    \t               var maker_model1 = ''\n    \t            }\n    \t             else{\n    \t               maker_model1 = maker_model\n    \t           }\n    \t            if(owner_count==null)\n    \t           {\n    \t                var owner_count1 = ''\n    \t            }\n    \t             else{\n    \t               owner_count1 = owner_count\n    \t           }\n    \t            if(fitness_dt==null)\n    \t           {\n    \t                var fitness_dt1 = ''\n    \t            }\n    \t             else{\n    \t               fitness_dt1 = fitness_dt\n    \t           }\n    \t            if(insurance_date==null)\n    \t           {\n    \t                var insurance_date1 = ''\n    \t            }\n    \t             else{\n    \t               insurance_date1 = insurance_date\n    \t           }\n    \t            if(manufacturing_date==null)\n    \t           {\n    \t                var manufacturing_date1 = ''\n    \t            }\n    \t             else{\n    \t               manufacturing_date1 = manufacturing_date\n    \t           }\n    \t            if(registration_date==null)\n    \t           {\n    \t                var registration_date1 = ''\n    \t            }\n    \t             else{\n    \t               registration_date1 = registration_date\n    \t           }\n    \t            if(model==null)\n    \t           {\n    \t                var model1 = ''\n    \t            }\n    \t             else{\n    \t               model1 = model\n    \t           }\n    \t            \n    \t            \n    \t             frappe.call({\n    \t\t            method:\"website_item\", \n    \t\t            args: {'name':name, 'item_group':item_group, \n    \t\t                'standard_rate':price, 'maker_model':maker_model1, 'vehicle_class':vehicle_class1,\n    \t\t                'owner_count':owner_count1, 'model':model1, 'sub':sub, 'fitness_dt':fitness_dt1, 'insurance_date':insurance_date1, \n    \t\t                'manufacturing_date':manufacturing_date1, 'registration_date':registration_date1, 'equipment_condition':equipment_condition,\n    \t\t                'equipment_current_reading':equipment_current_reading, 'location':location, 'short_description':short_description,\n    \t\t                'description':description, 'img1':img1, 'img2':img2, 'img3':img3\n    \t\t            }\n    \t\t          \n    \t\t        });\n\t    \t});\n\t    \n\t\t}\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-01-12 17:10:42.961009",
  "module": "Migoo CRM",
  "name": "Equipment fetch data button CSS",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tvar element = document.querySelectorAll(\".form-section\")[1];\n\t\telement.classList.add(\"section-no\");\n\t\tset_css_1(frm);\n\t}\n})\nfunction set_css_1(frm){\n\tconsole.log(\"set_css\");\n    document.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.color = '#fff'\n// \tdocument.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.marginTop = '25px'\n\tconsole.log(\"End_set_css\");\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-01-12 17:10:42.818025",
  "module": "Migoo CRM",
  "name": "Prospect and Supplier create",
  "script": "frappe.ui.form.on('Lead', {\n\trefresh(frm) {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Prospect',\"Create\"); \n\t        frm.remove_custom_button('Add to Prospect', \"Action\");\n\t         },0);  \n\t\n\tvar a=frm.doc.company_name;\n\t   // alert(a)\n\t    if(a !=\"\")\n\t    {\n\t        var b =\"Company\";\n\t        var c = frm.doc.company_name;\n\t    }\n\t    else\n\t    {\n\t        \n\t        b=\"Individual\";\n\t    }\n\t   // alert(a)\n\t   // alert(b)\n\t   var status=frm.doc.status\n\t   if(status==\"Interested\"){\n\t       //alert(status)\n\t\tfrm.add_custom_button(__('Create Supplier'), function(){\n    \t\t frappe.new_doc(\"Supplier\", {\n    \t\t \"name_of_suppier\": frm.doc.lead_name,\n    \t\t \"email\":frm.doc.email_id,\n    \t\t \"supplier_type\":b,\n    \t\t \"phone_no\":frm.doc.phone,\n    \t\t \"email_id\":frm.doc.email_id,\n    \t\t \"mobile_number\":frm.doc.mobile_no,\n    \t\t \"whatsapp_number\":frm.doc.whatsapp_no,\n    \t\t \"country\":frm.doc.country,\n    \t\t \"company_name\":c,\n    \t\t });\n    \t\t \n\t\t \n\n\t\t});\n\t   }\n\t}\n});",
  "view": "Form"
 }
]